plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
    id "com.matthewprenger.cursegradle" version "1.4.0"
}


dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation project(":Common")
}

loom {
    mixin {
        defaultRefmapName = "${mod_id}.refmap.json"
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            vmArg("-Dmixin.debug.export=true")
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            vmArg("-Dmixin.debug.export=true")
            runDir("run")
        }
        data {
            inherit client
            setConfigName("Fabric Data")
            ideConfigGenerated(true)


            vmArg("-Dfabric-api.datagen")
            vmArg("-Dfabric-api.datagen.output-dir=${project(":Common").file("src/main/generated")}")
            vmArg("-Dfabric-api.datagen.modid=${mod_id}")

            runDir "build/datagen"

        }
    }
}


processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName + "-" + project.name
            version project.version
            from components.java
        }
    }

    repositories {
        if (ENV.NANITE_TOKEN) {
            maven {
                url "https://maven.nanite.dev/${SNAPSHOT ? "snapshots" : "releases"}"
                credentials {
                    username = "nanite"
                    password = "${ENV.NANITE_TOKEN}"
                }
            }
        }
    }
}

if (ENV.CURSE_TOKEN) {
    curseforge {
        apiKey = ENV.CURSE_TOKEN
        project {
            id = project.curse_id
            releaseType = "beta"
            addGameVersion "Fabric"
            addGameVersion "${minecraft_version}"
            mainArtifact(remapJar)
            changelog = file("../CHANGELOG.md")
            changelogType = 'markdown'
        }
    }
}

rootProject.tasks.curseforgePublish.dependsOn tasks.curseforge
